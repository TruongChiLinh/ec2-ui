name: CI FE-APP

on:
  push:
    branches:
      - main

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove Old Image with Tag latest
        run: |
          echo "Removing old image with tag: latest"
          docker rmi ${{ secrets.DOCKER_USERNAME }}/image-fe:latest || true

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/image-fe:latest -f Dockerfile .

      - name: Push Docker Image
        run: |
          set -e
          echo "Pushing image with tag: latest"
          docker push ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

     
  pull_image:
    runs-on: ubuntu-latest
    needs: build_and_push_image
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: |
          echo "Pulling image with tag: latest"
          docker pull ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

  deploy:
    runs-on: ubuntu-latest
    needs: pull_image
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Add SSH key
      run: |
        echo "$EC2_PRIVATE_KEY" > osaka-key.pem
        chmod 600 osaka-key.pem

    - name: SSH into EC2 and check Docker version
      run: |
        ssh -i osaka-key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP_ADDRESS }} "docker --version"


